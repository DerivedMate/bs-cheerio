// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Cheerio = require("cheerio");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Cheerio$BsCheerio = require("../src/Cheerio.bs.js");

var html = "\n  <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"/>\n  <title>Document</title>\n</head>\n<body>\n  <ul className=\"ul_class\">\n    <li class=\"ul_class__li_class\" id=\"LI_0_id\">LI_0</li>\n    <li class=\"ul_class__li_class\" id=\"LI_1_id\" data-d=\"LI_1_data\">LI_1</li>\n    <li class=\"ul_class__li_class\">LI_2</li>\n    <li class=\"ul_class__li_class\"></li>\n  </ul>\n</body>\n</html>\n";

Jest.describe("text", (function (param) {
        var dom = Cheerio.load(html);
        Jest.test("with text", (function (param) {
                return Jest.Expect.toBe("LI_0", Jest.Expect.expect(Curry._2(Cheerio$BsCheerio.select, dom, "ul li#LI_0_id").text()));
              }));
        return Jest.test("without text", (function (param) {
                      return Jest.Expect.toEqual("", Jest.Expect.expect(Curry._2(Cheerio$BsCheerio.select, dom, "ul li:nth-child(4)").text()));
                    }));
      }));

Jest.describe("html", (function (param) {
        var dom = Cheerio.load(html);
        return Jest.test("works", (function (param) {
                      return Jest.Expect.toContainString("<li class=\"ul_class__li_class\">LI_2</li>", Jest.Expect.expect(Curry._2(Cheerio$BsCheerio.select, dom, "ul").html()));
                    }));
      }));

Jest.describe("attr1", (function (param) {
        var dom = Cheerio.load(html);
        Jest.test("Some(p) when a prop exists", (function (param) {
                return Jest.Expect.toEqual("LI_1_data", Jest.Expect.expect(Caml_option.nullable_to_opt(Curry._2(Cheerio$BsCheerio.select, dom, "li#LI_1_id").attr("data-d"))));
              }));
        Jest.test("None when a prop doesn't exist", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Caml_option.nullable_to_opt(Curry._2(Cheerio$BsCheerio.select, dom, "li#LI_1_id").attr("made-up-prop"))));
              }));
        return Jest.test("None when an element doesn't exist", (function (param) {
                      return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Caml_option.nullable_to_opt(Curry._2(Cheerio$BsCheerio.select, dom, "li#IDontExist").attr("me-neither"))));
                    }));
      }));

Jest.describe("attr2", (function (param) {
        var dom = Cheerio.load(html);
        Jest.test("Sets value of an existing element", (function (param) {
                return Jest.Expect.toEqual("some-value", Jest.Expect.expect(Caml_option.nullable_to_opt(Curry._2(Cheerio$BsCheerio.select, dom, "li#LI_1_id").attr("data-sth", "some-value").attr("data-sth"))));
              }));
        Jest.test("None when trying to set a value of a nonexisting element", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Caml_option.nullable_to_opt(Curry._2(Cheerio$BsCheerio.select, dom, "li#IDontExist").attr("data-sth", "some-value").attr("data-sth"))));
              }));
        return Jest.test("Removes the attr if `null` is passed", (function (param) {
                      return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Caml_option.nullable_to_opt(Curry._2(Cheerio$BsCheerio.select, dom, "li#LI_1_id").attr("data-d", null).attr("data-d"))));
                    }));
      }));

Jest.describe("next", (function (param) {
        var dom = Cheerio.load(html);
        return Jest.test("Some when found the next node", (function (param) {
                      return Jest.Expect.toEqual("LI_1_id", Jest.Expect.expect(Caml_option.nullable_to_opt(Curry._2(Cheerio$BsCheerio.select, dom, "li#LI_0_id").next().attr("id"))));
                    }));
      }));

exports.html = html;
/*  Not a pure module */
